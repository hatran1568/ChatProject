@model Chat
@{
    Layout = "Shared/_LayoutHome.cshtml";
}
@using System.Security.Claims
@{
    var userId = User.FindFirst(ClaimTypes.NameIdentifier).Value;
}
@*<div class="chat-body">

        @foreach (var message in Model.Messages)
        {

            <div class="message">
                <header>@message.User.DisplayName</header>
                <p>@message.Text</p>
                <footer>@message.Timestamp</footer>
            </div>
        }
    </div>*@

<link href="~/css/emojionearea.min.css" rel="stylesheet" />
<link href="~/css/UserList.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />

<div class="main">

    @if (User.Identity.IsAuthenticated)
    {
        <vc:room chat-type="@ViewBag.ChatType">
        </vc:room>
    }
    @if (ViewBag.ChatType == ChatType.Room)
    {
        <div class="chat">
            <div class="row"></div>
            <div class="main-body">
                <div class="col-9">
                    <div class="chat-body">
                        <ul class="list-unstyled" id="msg-list">
                            @foreach (var message in Model.Messages)
                            {
                                <li>
                                    <div class="chat-message d-flex @(message.User.UserName.Equals(User.Identity.Name) ? "ismine" : "isother")">
                                        <div class="left-side">
                                            <img src="/images/@message.User.Avatar" class="message-avatar" />
                                        </div>
                                        <div class="message-content d-flex flex-column">
                                            <div class="d-flex justify-content-between">
                                                <span class="author">@message.User.DisplayName</span>
                                                <span class="timestamp">
                                                    <i class="far fa-clock"></i>
                                                    <span>@message.Timestamp</span>
                                                </span>
                                            </div>
                                            <span class="content">@message.Text</span>
                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
                <div class="col-3" style="border-left:1px solid black">
                    <h3>Members</h3>
                    <div id="plist" class="people-list">
                        <ul class="list-unstyled chat-list mt-2 mb-0">
                            @foreach (var item in Model.Users)
                            {
                                @if (!item.UserId.Equals(userId))
                                {
                                    <li class="clearfix" onclick="window.location.href='@Url.Action("CreatePrivateRoom", "Home", new { userId = item.UserId})'">
                                        <img src="/images/@item.User.Avatar" alt="avatar">
                                        <div class="about">
                                            <div class="name">@item.User.DisplayName</div>
                                            <div class="status"> <i class="fa fa-circle offline"></i></div>
                                        </div>
                                    </li>
                                }
                                else
                                {
                                    <li class="clearfix">
                                        <img src="/images/@item.User.Avatar" alt="avatar">
                                        <div class="about">
                                            <div class="name">@item.User.DisplayName</div>
                                            <div class="status"> <i class="fa fa-circle offline"></i></div>
                                        </div>
                                    </li>
                                }

                            }

                        </ul>
                    </div>
                </div>
            </div>
            <form class="chat-input" asp-controller="Home" asp-action="CreateMessage" onsubmit="sendMessage()" id="chatform">
                <input type="hidden" name="chatId" value="@Model.Id" />
                <input type="hidden" id="currentUser" value="@User.Identity.Name" />
                <input type="hidden" name="roomId" value="@Model.Id" />
                <input type="text" name="message" id="message-input" style="display: none;" />
                <button type="submit">Send</button>
            </form>
        </div>
    }
    else
    {
        <div class="chat">
            <div class="chat-body">
                <ul class="list-unstyled" id="msg-list">
                    @foreach (var message in Model.Messages)
                    {
                        <li>
                            <div class="chat-message d-flex @(message.User.UserName.Equals(User.Identity.Name) ? "ismine" : "isother")">
                                <div class="left-side">
                                    <img src="/images/@message.User.Avatar" class="message-avatar" />
                                </div>
                                <div class="message-content d-flex flex-column">
                                    <div class="d-flex justify-content-between">
                                        <span class="author">@message.User.DisplayName</span>
                                        <span class="timestamp">
                                            <i class="far fa-clock"></i>
                                            <span>@message.Timestamp</span>
                                        </span>
                                    </div>
                                    <span class="content">@message.Text</span>
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            </div>
            <form class="chat-input" asp-controller="Home" asp-action="CreateMessage" onsubmit="sendMessage()" id="chatform">
                <input type="hidden" name="chatId" value="@Model.Id" />
                <input type="hidden" id="currentUser" value="@User.Identity.Name" />
                <input type="hidden" name="roomId" value="@Model.Id" />
                <input type="text" name="message" id="message-input" style="display: none;" />
                <button type="submit">Send</button>
            </form>
        </div>
    }


</div>



@section scripts{
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script src="~/js/emojionearea.min.js"></script>
    <script>
        $(document).ready(function () {
            var el = $("#message-input").emojioneArea({
                pickerPosition: "top",
                placeholder: "Type something here",
                filtersPosition: "bottom",
                inline: true,
                events: {
                    keyup: function (editor, event) {
                        if (event.keyCode === 13) {
                            console.log("13");
                            //sendMessage();
                        }
                    }
                }
            });
        })
        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();
        var _connectionId = '';
        connection.on("ReceiveMessage", function (data, sender, date) {
            console.log("messagereceived!")
            var currentUserName = document.getElementById("currentUser").value;
            var div1 = document.createElement("div");
            div1.classList.add("chat-message", "d-flex")
            if (sender.userName == currentUserName) div1.classList.add("ismine");

            var divImg = document.createElement("div");
            divImg.classList.add("left-side");

            var avaimg = document.createElement("img");
            avaimg.src = "/images/" + sender.avatar;
            avaimg.classList.add("message-avatar");
            console.log("src: " + avaimg.src);
            divImg.appendChild(avaimg);
            div1.appendChild(divImg);

            var div2 = document.createElement("div")
            div2.classList.add("message-content", "d-flex", "flex-column")
            var div3 = document.createElement("div")
            div3.classList.add("d-flex", "justify-content-between")

            var spanAuthor = document.createElement("span");
            spanAuthor.classList.add("author")
            spanAuthor.appendChild(document.createTextNode(sender.displayName))

            var spanTimestamp = document.createElement("span");
            spanTimestamp.classList.add("timestamp")
            var timeIcon = document.createElement("i")
            timeIcon.classList.add("far", "fa-clock")
            var childSpan = document.createElement("span");
            childSpan.appendChild(document.createTextNode(date))

            spanTimestamp.appendChild(timeIcon);
            spanTimestamp.appendChild(childSpan);

            div3.appendChild(spanAuthor)
            div3.appendChild(spanTimestamp)

            div2.appendChild(div3);

            var spanContent = document.createElement("span");
            spanContent.classList.add("content")
            spanContent.appendChild(document.createTextNode(data.text))

            div2.appendChild(spanContent)

            div1.appendChild(div2)
            var li = document.createElement("li")
            li.appendChild(div1)
            var list = document.getElementById("msg-list")
            list.appendChild(li)
            $(".chat-body").animate({ scrollTop: $(".chat-body")[0].scrollHeight }, 500);
            //scrollToBottom()
            //document.querySelector('.msg-list').append(li)

            //var message = document.createElement("div")
            //message.classList.add("message");
            //var header = document.createElement("header")
            //header.appendChild(document.createTextNode(sender))
            //var p = document.createElement("p")
            //p.appendChild(document.createTextNode(data.text))
            //var footer = document.createElement("footer")
            //footer.appendChild(document.createTextNode(date))

            //message.appendChild(header);
            //message.appendChild(p);
            //message.appendChild(footer);

            //document.querySelector('.chat-body').append(message);
        })

        var joinRoom = function () {
            var url = '/Chat/JoinRoom/' + _connectionId + '/@Model.Id';
            axios.post(url, null)
                .then(res => {
                    console.log("Room Joined!", res);
                })
                .catch(err => {
                    console.error("Failed to join room!", err);
                })
        }

        connection.start()
            .then(function () {
                connection.invoke("getConnectionId")
                    .then(function (connectionId) {
                        _connectionId = connectionId
                        joinRoom();
                        $(".chat-body").animate({ scrollTop: $(".chat-body")[0].scrollHeight }, 100);
                    })
            })
            .catch(function (err) {
                console.log(err)
            })

        var form = null;
        function sendMessage() {
            event.preventDefault();
            var data = new FormData(event.target);
            $(".emojionearea-editor").html('');
            axios.post('/Chat/SendMessage/', data)
                .then(res => {
                    console.log("Message Sent!")
                })
                .catch(err => {
                    console.log("Failed to send message")
                })
            //event.preventDefault();
        }
    </script>
}